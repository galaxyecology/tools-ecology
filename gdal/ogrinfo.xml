<tool id="ogrinfo" name="OGR Informations" version="@VERSION@">
    <description>lists information about an OGR supported data source</description>
    <macros>
        <import>gdal_macros.xml</import>
    </macros>   
    <expand macro="gdal_requirements" />
    <command detect_errors="exit_code"><![CDATA[
        ogrinfo -ro '$input1'  -al 
            #if $settings.advanced=='advanced'

                #if $settings.condi_sql.sql=='sql':
                    #if $settings.condi_sql.sql_statement!='':
                        -sql '$settings.condi_sql.sql_statement'
                    #end if
                #end if
               
                $settings.so

            #end if

        > '$output'

    ]]></command>
    
    <inputs>
        <param type="data" name="input1" format="data" label="Gdal supported input file" help="http://www.gdal.org/ogr_formats.html"/>
        <conditional name="settings">
            <expand macro="gdal_advanced_params_select"/>
            <when value="advanced">
                <conditional name="condi_sql">
                    <param name="sql" type="select" label="-sql statement"> 
                        <option value="no_sql" selected="true">Don't use the -sql option</option>
                        <option value="sql">Use the -sql option</option>
                    </param>
                    <when value="no_sql">
                    </when>
                    <when value="sql">
                        <param name="sql_statement" type="text" label="-sql statement" help="eg : SELECT * FROM layer WHERE X>10." value="">
                            <sanitizer sanitize="False"/>
                            <validator type="regex" message="Type a valid SQL query">^(?ims)\s*select\s+.*\s+from\s+.*$</validator>
                        </param>
                    </when>
                </conditional>
                <param name="so" label="-so" type="boolean" truevalue="-so" falsevalue="" checked="true"/>
            </when>
        </conditional>
    </inputs>
    
    <outputs>
        <data name="output" format="txt" label="OGR Info file on ${on_string}"/>
    </outputs>
    
    <tests>
        <test>
            <param name="input1" value="ogrinfo_test.nc"/>
            <param name="advanced" value="simple"/>
            <output name="output" file="ogrinfo_test1_out.txt" lines_diff="6"/>
        </test>
        <test>
            <param name="input1" value="ogrinfo_test.nc"/>
            <param name="advanced" value="advanced"/>
            <param name="sql" value="sql"/>
            <param name="sql_statement" value="SELECT * FROM dataset_3 WHERE time > 9000"/>
            <param name="so" value=""/>
            <output name="output" file="ogrinfo_test2_out.txt" lines_diff="2"/>
        </test>
   </tests>
    <help><![CDATA[
========
Ogrinfo
========

**What it does**

The Ogrinfo program lists various information about an OGR supported vector dataset.

|

**How to use it**

Select from history a suported vector file. 

|

**Other options, advanced usage**

*-sql statement*

    Execute the indicated SQL statement and return the result. 

|

*-so*

    Summary Only: suppress listing of features, show only the summary information like projection, schema, feature count and extents.

|

**Sources**

http://www.gdal.org

http://www.gdal.org/ogr_utilities.html

http://download.osgeo.org/gdal/workshop/foss4ge2015/workshop_gdal.pdf
    ]]></help>
</tool>
